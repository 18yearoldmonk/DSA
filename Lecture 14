int pivot(vector<int>& arr, int n){
int s=0;
	int e=n-1;
	int mid=s+(e-s)/2;
	while(s<e){
		if(arr[0]<=arr[mid]){
			s=mid+1;
		}
		else{
		e=mid;
		}
		mid=s+(e-s)/2;
	}
	return s;
}
int binary(vector<int>& arr,int s, int e, int k){
	
	int mid=s+(e-s)/2;
	while(s<=e){
		if(arr[mid]==k){
			return mid;
		}
		else if(k<arr[mid]){
			e=mid-1;
		}
		else{
			s=mid+1;
		}
		mid=s+(e-s)/2;
}
	return -1;
}

int findPosition(vector<int>& arr, int n, int k)
{
	int pivo=pivot(arr,n);
	if(k<=arr[n-1]  && arr[pivo]<=k){
		return binary(arr,pivo,n-1,k);
	}
	else{
		return binary(arr,0,pivo,k);
}
	
	
}
